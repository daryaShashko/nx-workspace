version: 0.2

env:
  variables:
    # Application build-related variables"
    PROJECT_NAME: ""
    BUILD_CONFIGURATION: "production"

    # AWS-specific variables:
    S3_BUCKET: ""
    CLOUDFRONT_DISTRIBUTION_ID: ""

phases:
  install:
    runtime-versions:
      nodejs: 14

    commands:
      # Update system packages
      - echo Updating and Installing system dependencies...
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      # tempo fix "|| true"
      - apt-get update -y -q --list-cleanup || true

      # Install all necessary dependencies:
      - echo Installing source NPM dependencies...
      - npm config set unsafe-perm true
      - npm install
      - npm config set unsafe-perm false

  build:
    commands:
      # Builds an Angular application:
      - echo Build is started on `date`
      - nx run newflix:build:${BUILD_CONFIGURATION}
      - echo Build is successfully completed on `date`

  post_build:
    commands:
      - echo Application deployment is started on `date`

      # enable CloudFront cli:
      - aws configure set preview.cloudfront true

      # Invalidate CloudFront cache
      - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/index.html"

      # Clear S3 bucket:
      - aws s3 rm s3://${S3_BUCKET} --recursive --exclude "index.html"
      - echo S3 bucket is cleared.

      # Copy dist folder to S3 bucket:
      - aws s3 cp dist/apps/boss-app s3://${S3_BUCKET} --recursive

      # Create CloudFront invalidation (which actually clears cache):
      - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"

      - echo Application deployment is successfully completed on `date`

artifacts:
  files:
    - '**/*'
  base-directory: 'dist/apps/boss-app'
  discard-paths: yes
